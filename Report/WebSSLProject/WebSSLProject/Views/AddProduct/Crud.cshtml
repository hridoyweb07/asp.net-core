@model WebSSLProject.Models.Product
@{
    ViewBag.Title = "Crud";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listMessage = ViewData["List"] as List<WebSSLProject.Models.Product>;
    var sentTime = Model.SalesDate == null ? "" : Convert.ToDateTime(Model.SalesDate).ToString("yyyy-MM-dd");

}

<h2></h2>

@using (Ajax.BeginForm(
        "Crud",
        "AddProduct",
        new AjaxOptions
        {
            OnSuccess = "OnSuccess",
            OnFailure = "OnFailure",
            LoadingElementId = "progress",
            HttpMethod = "POST"
        },
        new { enctype = "multipart/form-data" }
    ))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h3>Add New Product</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.ProductId)
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Stock, "StockIn", new { htmlAttributes = new { @class = "form-control" } })
                StockIn
                @Html.RadioButtonFor(model => model.Stock, "StockOut", new { htmlAttributes = new { @class = "form-control" } })
                StockOut
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesDate, "Date", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="img" />
                @Html.ValidationMessageFor(model => model.ProductPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductBrand.BrandName, "BrandId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<p class="pull-right">
    <a href=@Url.Action("ExportCustomers") class="btn btn-primary">Download All</a>
</p>

<table class="table table-striped">
    <tr>
        <th>ProductName</th>
        <th>Price</th>
        <th>Quantity</th>
        <th>Stock</th>
        <th>SalesDate</th>
        <th>ProductPhoto</th>
        <th>BrandName</th>
        <th>#</th>
        <th>#</th>
        <th>#</th>
    </tr>
    @foreach (var item in listMessage)
    {
<tr>
    <td>@item.ProductName</td>
    <td>@item.Price</td>
    <td>@item.Quantity</td>
    <td>@item.Stock</td>
    <td>@item.SalesDate</td>
    <td><img src="@item.ProductPhoto" width="100"></td>
    @*<td>@item.ProductBrand.BrandName</td>*@
    <td>@Html.DisplayFor(model => item.ProductBrand.BrandName)</td>
    <td><a href="/AddProduct/ExportCustomer?id=@item.ProductId">Download</a></td>
    <td><a href="/AddProduct/Crud?id=@item.ProductId">Edit</a></td>
    <td><a href="/AddProduct/Delete?id=@item.ProductId" onclick="return confirm('Are you sure to delete?')">Delete</a></td>

</tr>
    }
</table>

